'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _nextConfigProvider = require('../../next-config-provider/lib/index.js');

var _nextConfigProvider2 = _interopRequireDefault(_nextConfigProvider);

var _nextUtil = require('../../next-util/lib/index.js');

var _panel = require('./panel.js');

var _panel2 = _interopRequireDefault(_panel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Collapse */
var Collapse = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Collapse, _React$Component);

    function Collapse(props) {
        (0, _classCallCheck3.default)(this, Collapse);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        var expandedKeys = void 0;
        if ('expandedKeys' in props) {
            expandedKeys = props.expandedKeys;
        } else {
            expandedKeys = props.defaultExpandedKeys;
        }

        _this.state = {
            expandedKeys: typeof expandedKeys === 'undefined' ? [] : expandedKeys
        };
        return _this;
    }

    Collapse.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if ('expandedKeys' in nextProps) {
            this.setState({
                expandedKeys: typeof nextProps.expandedKeys === 'undefined' ? [] : nextProps.expandedKeys
            });
        }
    };

    Collapse.prototype.onItemClick = function onItemClick(key) {
        var expandedKeys = this.state.expandedKeys;
        if (this.props.accordion) {
            expandedKeys = expandedKeys[0] === key ? [] : [key];
        } else {
            expandedKeys = [].concat(expandedKeys);
            var index = expandedKeys.indexOf(key);
            var isExpanded = index > -1;
            if (isExpanded) {
                expandedKeys.splice(index, 1);
            } else {
                expandedKeys.push(key);
            }
        }
        this.setExpandedKey(expandedKeys);
    };

    Collapse.prototype.getProps = function getProps(item, index, key) {
        var _this2 = this;

        var expandedKeys = this.state.expandedKeys;
        var title = item.title;

        var disabled = this.props.disabled;

        if (!disabled) {
            disabled = item.disabled;
        }

        var isExpanded = false;
        if (this.props.accordion) {
            isExpanded = expandedKeys[0] === key;
        } else {
            isExpanded = expandedKeys.indexOf(key) > -1;
        }

        return {
            key: key,
            title: title,
            isExpanded: isExpanded,
            disabled: disabled,
            onClick: disabled ? null : function () {
                _this2.onItemClick(key);
                if ('onClick' in item) {
                    item.onClick(key);
                }
            }
        };
    };

    Collapse.prototype.getItemsByDataSource = function getItemsByDataSource() {
        var _this3 = this;

        return this.props.dataSource.map(function (item, index) {
            var key = item.key || String(index);

            return _react2.default.createElement(
                _panel2.default,
                (0, _extends3.default)({}, _this3.getProps(item, index, key), { key: key }),
                item.content
            );
        });
    };

    Collapse.prototype.getItemsByChildren = function getItemsByChildren() {
        var _this4 = this;

        return _react2.default.Children.map(this.props.children, function (child, index) {
            if (child && typeof child.type === 'function' && child.type.isNextPanel) {
                var key = child.key || String(index);
                return _react2.default.cloneElement(child, _this4.getProps(child.props, index, key));
            } else {
                return child;
            }
        });
    };

    Collapse.prototype.setExpandedKey = function setExpandedKey(expandedKeys) {
        if (!('expandedKeys' in this.props)) {
            this.setState({ expandedKeys: expandedKeys });
        }
        this.props.onExpand(this.props.accordion ? expandedKeys[0] : expandedKeys);
    };

    Collapse.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            disabled = _props.disabled,
            dataSource = _props.dataSource;

        var collapseClassName = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'collapse'] = true, _classNames[prefix + 'collapse-disabled'] = disabled, _classNames[className] = Boolean(className), _classNames));

        var others = _nextUtil.obj.pickOthers(Collapse.propTypes, this.props);
        return _react2.default.createElement(
            'div',
            (0, _extends3.default)({ className: collapseClassName, style: style }, others),
            dataSource ? this.getItemsByDataSource() : this.getItemsByChildren()
        );
    };

    return Collapse;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 组件接受行内样式
     */
    style: _propTypes2.default.object,
    /**
     * 使用数据模型构建
     */
    dataSource: _propTypes2.default.array,
    /**
     * 默认展开keys
     */
    defaultExpandedKeys: _propTypes2.default.array,
    /**
     * 受控展开keys
     */
    expandedKeys: _propTypes2.default.array,
    /**
     * 展开状态发升变化时候的回调
     */
    onExpand: _propTypes2.default.func,
    /**
     * 所有禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 扩展class
     */
    className: _propTypes2.default.string,
    /**
     * 手风琴模式，一次只能打开一个
     */
    accordion: _propTypes2.default.bool,
    children: _propTypes2.default.node
}, _class.defaultProps = {
    accordion: false,
    prefix: 'next-',
    onExpand: _nextUtil.func.noop
}, _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _temp);
Collapse.displayName = 'Collapse';
exports.default = _nextConfigProvider2.default.config(Collapse);
module.exports = exports['default'];