'use strict';

exports.__esModule = true;
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _nextUtil = require('../../../next-util/lib/index.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bindCtx = _nextUtil.func.bindCtx;
var pickOthers = _nextUtil.obj.pickOthers;
var Item = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Item, _Component);

    function Item(props) {
        (0, _classCallCheck3.default)(this, Item);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['handleClick', 'handleKeyDown']);
        return _this;
    }

    Item.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = (0, _reactDom.findDOMNode)(this);

        this.setFocus();
    };

    Item.prototype.componentDidUpdate = function componentDidUpdate() {
        this.setFocus();
    };

    Item.prototype.focusable = function focusable() {
        var _props = this.props,
            root = _props.root,
            type = _props.type,
            disabled = _props.disabled;
        var focusable = root.props.focusable;

        return focusable && (type === 'submenu' || !disabled);
    };

    Item.prototype.getFocused = function getFocused() {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;
        var focusedKey = root.state.focusedKey;

        return focusedKey === _key;
    };

    Item.prototype.setFocus = function setFocus() {
        if (this.focusable()) {
            var focused = this.getFocused();
            if (focused) {
                this.itemNode.focus();
            }
        }
    };

    Item.prototype.handleClick = function handleClick(e) {
        e.stopPropagation();

        var _props3 = this.props,
            _key = _props3._key,
            root = _props3.root;

        root.handleItemClick(_key, this, e);

        this.props.onClick && this.props.onClick(e);
    };

    Item.prototype.handleKeyDown = function handleKeyDown(e) {
        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            type = _props4.type;

        if (this.focusable()) {
            root.handleItemKeyDown(_key, type, this, e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    Item.prototype.getTitle = function getTitle(children) {
        var labelString = '';

        var loop = function loop(children) {
            _react.Children.forEach(children, function (child) {
                if ((0, _react.isValidElement)(child) && child.props.children) {
                    loop(child.props.children);
                } else if (typeof child === 'string') {
                    labelString += child;
                }
            });
        };

        loop(children);

        return labelString;
    };

    Item.prototype.render = function render() {
        var _cx;

        var _props5 = this.props,
            level = _props5.level,
            root = _props5.root,
            component = _props5.component,
            disabled = _props5.disabled,
            className = _props5.className,
            children = _props5.children;

        var others = pickOthers(Object.keys(Item.propTypes), this.props);

        var _root$props = root.props,
            prefix = _root$props.prefix,
            focusable = _root$props.focusable,
            mode = _root$props.mode,
            inlineIndent = _root$props.inlineIndent,
            itemClassName = _root$props.itemClassName;

        var focused = this.getFocused();
        var newClassName = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-item'] = true, _cx[prefix + 'disabled'] = disabled, _cx[prefix + 'focused'] = !focusable && focused, _cx[itemClassName] = !!itemClassName, _cx[className] = !!className, _cx));
        if (disabled) {
            others['aria-disabled'] = true;
        }
        if (this.focusable()) {
            others.tabIndex = '-1';
        }
        if (mode === 'inline' && level > 1 && inlineIndent > 0) {
            others.style = (0, _extends3.default)({}, others.style || {}, {
                paddingLeft: level * inlineIndent + 'px'
            });
        }
        var TagName = component;

        return _react2.default.createElement(
            TagName,
            (0, _extends3.default)({ role: 'menuitem',
                title: this.getTitle(children)
            }, others, {
                className: newClassName,
                onClick: this.handleClick,
                onKeyDown: this.handleKeyDown }),
            _react2.default.createElement(
                'div',
                { className: prefix + 'menu-item-inner' },
                children
            )
        );
    };

    return Item;
}(_react.Component), _class.propTypes = {
    _key: _propTypes2.default.string,
    level: _propTypes2.default.number,
    root: _propTypes2.default.object,
    type: _propTypes2.default.oneOf(['submenu', 'item']),
    component: _propTypes2.default.string,
    disabled: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    onClick: _propTypes2.default.func,
    onKeyDown: _propTypes2.default.func
}, _class.defaultProps = {
    component: 'li'
}, _temp);
Item.displayName = 'Item';
exports.default = Item;
module.exports = exports['default'];