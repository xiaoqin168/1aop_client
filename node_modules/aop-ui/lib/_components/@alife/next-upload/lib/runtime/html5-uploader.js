'use strict';

exports.__esModule = true;
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _nextUtil = require('../../../next-util/lib/index.js');

var _uploader = require('./uploader.js');

var _uploader2 = _interopRequireDefault(_uploader);

var _selecter = require('./selecter.js');

var _selecter2 = _interopRequireDefault(_selecter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Html5Uploader = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Html5Uploader, _Component);

    function Html5Uploader() {
        (0, _classCallCheck3.default)(this, Html5Uploader);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Html5Uploader.prototype.componentDidMount = function componentDidMount() {
        var props = this.props;

        this.uploader = new _uploader2.default({
            action: props.action,
            name: props.name,
            timeout: props.timeout,
            method: props.method,
            beforeUpload: props.beforeUpload,
            onProgress: props.onProgress,
            onSuccess: props.onSuccess,
            onError: props.onError,
            withCredentials: props.withCredentials,
            headers: props.headers,
            data: props.data
        });
    };

    Html5Uploader.prototype.componentWillUnmount = function componentWillUnmount() {
        this.abort();
    };

    Html5Uploader.prototype.abort = function abort(file) {
        this.uploader.abort(file);
    };

    Html5Uploader.prototype.startUpload = function startUpload(fileList) {
        this.uploader.startUpload(fileList);
    };

    Html5Uploader.prototype.render = function render() {
        var _props = this.props,
            accept = _props.accept,
            multiple = _props.multiple,
            children = _props.children,
            id = _props.id,
            disabled = _props.disabled,
            dragable = _props.dragable,
            style = _props.style,
            className = _props.className,
            onSelect = _props.onSelect,
            onDragOver = _props.onDragOver,
            onDragLeave = _props.onDragLeave,
            onDrop = _props.onDrop;


        return _react2.default.createElement(
            _selecter2.default,
            {
                id: id,
                accept: accept,
                multiple: multiple,
                dragable: dragable,
                disabled: disabled,
                className: className,
                style: style,
                onSelect: onSelect,
                onDragOver: onDragOver,
                onDragLeave: onDragLeave,
                onDrop: onDrop
            },
            children
        );
    };

    return Html5Uploader;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _selecter2.default.propTypes, {
    /**
     * 上传的地址
     */
    action: _propTypes2.default.string,
    /**
     * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)
     */
    accept: _propTypes2.default.string,
    /**
     * 上传额外传参
     */
    data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    /**
     * 设置上传的请求头部
     */
    headers: _propTypes2.default.object,
    /**
     * 是否允许请求携带 cookie
     */
    withCredentials: _propTypes2.default.bool,
    /**
     * 上传文件之前
     * @param {Object} file 文件对象
     * @return {Boolean} `false` 停止上传
     */
    beforeUpload: _propTypes2.default.func,
    /**
     * 正在上传文件的钩子，参数为上传的事件以及文件
     */
    onProgress: _propTypes2.default.func,
    /**
     * 上传成功回调函数，参数为请求下响应信息以及文件
     */
    onSuccess: _propTypes2.default.func,
    /**
     * 上传失败回调函数，参数为上传失败的信息、响应信息以及文件
     */
    onError: _propTypes2.default.func,
    children: _propTypes2.default.node,
    /**
     * 上传超时,单位ms
     */
    timeout: _propTypes2.default.number,
    /**
     * 上传方法
     */
    method: _propTypes2.default.oneOf(['post', 'put'])
}), _class.defaultProps = (0, _extends3.default)({}, _selecter2.default.defaultProps, {
    name: 'file',
    multiple: false,
    withCredentials: false,
    beforeUpload: _nextUtil.func.noop,
    onSelect: _nextUtil.func.noop,
    onDragOver: _nextUtil.func.noop,
    onDragLeave: _nextUtil.func.noop,
    onDrop: _nextUtil.func.noop,
    onProgress: _nextUtil.func.noop,
    onSuccess: _nextUtil.func.noop,
    onError: _nextUtil.func.noop,
    onAbort: _nextUtil.func.noop,
    method: 'post'
}), _temp);
Html5Uploader.displayName = 'Html5Uploader';
exports.default = Html5Uploader;
module.exports = exports['default'];