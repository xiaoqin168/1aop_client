'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _nextConfigProvider = require('../../next-config-provider/lib/index.js');

var _nextConfigProvider2 = _interopRequireDefault(_nextConfigProvider);

var _nextMenu = require('../../next-menu/lib/index.js');

var _nextMenu2 = _interopRequireDefault(_nextMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Nav
 * @description 继承自 `Menu` 的能力请查看 `Menu` 文档
 */
var Nav = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(Nav, _Component);

  function Nav() {
    (0, _classCallCheck3.default)(this, Nav);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  Nav.prototype.getChildContext = function getChildContext() {
    var _props = this.props,
        prefix = _props.prefix,
        direction = _props.direction,
        mode = _props.mode,
        iconOnly = _props.iconOnly,
        hasTooltip = _props.hasTooltip,
        hasArrow = _props.hasArrow;


    return {
      prefix: prefix,
      mode: direction === 'hoz' ? 'popup' : mode,
      iconOnly: iconOnly,
      hasTooltip: hasTooltip,
      hasArrow: hasArrow
    };
  };

  Nav.prototype.render = function render() {
    var _classNames;

    // eslint-disable-next-line
    var _props2 = this.props,
        prefix = _props2.prefix,
        className = _props2.className,
        style = _props2.style,
        children = _props2.children,
        type = _props2.type,
        direction = _props2.direction,
        activeDirection = _props2.activeDirection,
        mode = _props2.mode,
        triggerType = _props2.triggerType,
        inlineIndent = _props2.inlineIndent,
        openMode = _props2.openMode,
        popupAlign = _props2.popupAlign,
        iconOnly = _props2.iconOnly,
        hasArrow = _props2.hasArrow,
        hasTooltip = _props2.hasTooltip,
        others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'className', 'style', 'children', 'type', 'direction', 'activeDirection', 'mode', 'triggerType', 'inlineIndent', 'openMode', 'popupAlign', 'iconOnly', 'hasArrow', 'hasTooltip']);

    var props = {
      prefix: prefix,
      direction: direction,
      openMode: openMode,
      triggerType: triggerType,
      mode: direction === 'hoz' ? 'popup' : mode,
      popupAlign: direction === 'hoz' ? 'follow' : popupAlign,
      inlineIndent: iconOnly ? 0 : inlineIndent,
      hasSelectedIcon: false,
      popupAutoWidth: true,
      selectMode: 'single',
      itemClassName: prefix + 'nav-item'
    };

    var realActiveDirection = activeDirection;
    if (realActiveDirection && (direction === 'hoz' && (realActiveDirection === 'left' || realActiveDirection === 'right') || direction === 'ver' && (realActiveDirection === 'top' || realActiveDirection === 'bottom'))) {
      realActiveDirection = null;
    }

    if (!iconOnly && realActiveDirection === undefined) {
      realActiveDirection = direction === 'hoz' ? 'bottom' : type === 'line' ? 'right' : 'left';
    }

    var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'nav'] = true, _classNames['' + prefix + type] = type, _classNames[prefix + 'active'] = realActiveDirection, _classNames['' + prefix + realActiveDirection] = realActiveDirection, _classNames[prefix + 'icon-only'] = iconOnly, _classNames[prefix + 'no-arrow'] = !hasArrow, _classNames[className] = !!className, _classNames));
    var newStyle = iconOnly ? (0, _extends3.default)({}, style, { width: '60px' }) : style;

    return _react2.default.createElement(
      _nextMenu2.default,
      (0, _extends3.default)({ className: cls, style: newStyle }, props, others),
      children
    );
  };

  return Nav;
}(_react.Component), _class.propTypes = {
  prefix: _propTypes2.default.string,
  pure: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  style: _propTypes2.default.object,
  /**
   * 导航项和子导航
   */
  children: _propTypes2.default.node,
  /**
   * 导航类型
   * @enumdesc 普通, 主要, 次要, 线形
   */
  type: _propTypes2.default.oneOf(['normal', 'primary', 'secondary', 'line']),
  /**
   * 导航布局
   * @enumdesc 水平, 垂直
   */
  direction: _propTypes2.default.oneOf(['hoz', 'ver']),
  /**
   * 设置组件选中状态的 active 边方向
   * @enumdesc 无, 上, 下, 左, 右
   */
  activeDirection: _propTypes2.default.oneOf([null, 'top', 'bottom', 'left', 'right']),
  /**
   * 子导航打开的模式（水平导航只支持弹出）
   * @eumdesc 行内, 弹出
   */
  mode: _propTypes2.default.oneOf(['inline', 'popup']),
  /**
   * 子导航打开的触发方式
   */
  triggerType: _propTypes2.default.oneOf(['click', 'hover']),
  /**
   * 内联子导航缩进距离
   */
  inlineIndent: _propTypes2.default.number,
  /**
   * 内联子导航的展开模式，同时可以展开一个同级子导航还是多个同级子导航，该属性仅在 mode 为 inline 时生效
   * @eumdesc 一个, 多个
   */
  openMode: _propTypes2.default.oneOf(['single', 'multiple']),
  /**
   * 弹出子导航的对齐方式（水平导航只支持 follow ）
   * @eumdesc Item 顶端对齐, Nav 顶端对齐
   */
  popupAlign: _propTypes2.default.oneOf(['follow', 'outside']),
  /**
   * 弹出子导航的自定义类名
   */
  popupClassName: _propTypes2.default.string,
  /**
   * 是否只显示图标
   */
  iconOnly: _propTypes2.default.bool,
  /**
   * 是否显示右侧的箭头（仅在 iconOnly=true 时生效）
   */
  hasArrow: _propTypes2.default.bool,
  /**
   * 是否有 ToolTips （仅在 iconOnly=true 时生效）
   */
  hasTooltip: _propTypes2.default.bool,
  /**
   * 自定义导航头部
   */
  header: _propTypes2.default.node,
  /**
   * 自定义导航尾部
   */
  footer: _propTypes2.default.node
}, _class.defaultProps = {
  prefix: 'next-',
  pure: false,
  type: 'normal',
  direction: 'ver',
  mode: 'inline',
  triggerType: 'click',
  inlineIndent: 20,
  openMode: 'multiple',
  popupAlign: 'follow',
  hasTooltip: false,
  hasArrow: true
}, _class.childContextTypes = {
  prefix: _propTypes2.default.string,
  mode: _propTypes2.default.string,
  iconOnly: _propTypes2.default.bool,
  hasTooltip: _propTypes2.default.bool,
  hasArrow: _propTypes2.default.bool
}, _temp);
Nav.displayName = 'Nav';
exports.default = _nextConfigProvider2.default.config(Nav);
module.exports = exports['default'];