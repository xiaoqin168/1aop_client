'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _nextUtil = require('../../next-util/lib/index.js');

var _nextField = require('../../next-field/lib/index.js');

var _nextField2 = _interopRequireDefault(_nextField);

var _nextConfigProvider = require('../../next-config-provider/lib/index.js');

var _nextConfigProvider2 = _interopRequireDefault(_nextConfigProvider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function pickerDefined(obj) {
    var newObj = {};
    Object.keys(obj).forEach(function (i) {
        if (typeof obj[i] !== 'undefined') {
            newObj[i] = obj[i];
        }
    });
    return newObj;
}

function preventDefault(e) {
    e.preventDefault();
}

/** Form */
var Form = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Form, _React$Component);

    function Form(props) {
        (0, _classCallCheck3.default)(this, Form);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.onChange = function (name, value) {
            _this.props.onChange(_this._formField.getValues(), { name: name, value: value, field: _this._formField });
        };

        var options = (0, _extends3.default)({}, props.fieldOptions, {
            onChange: _this.onChange
        });

        if (props.field) {
            _this._formField = props.field;
            var onChange = _this._formField.options.onChange;
            options.onChange = _nextUtil.func.makeChain(onChange, _this.onChange);
            _this._formField.setOptions(options);
        } else {
            _this._formField = new _nextField2.default(_this, options);
        }
        return _this;
    }

    Form.prototype.getChildContext = function getChildContext() {
        return {
            _formField: this.props.field ? this.props.field : this._formField,
            _formSize: this.props.size
        };
    };

    Form.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if ('value' in nextProps) {
            this._formField.setValues(nextProps.value);
        }
        if ('error' in nextProps) {
            this._formField.setErrors(nextProps.error);
        }
    };

    Form.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            className = _props.className,
            inline = _props.inline,
            size = _props.size,
            labelAlign = _props.labelAlign,
            labelTextAlign = _props.labelTextAlign,
            onSubmit = _props.onSubmit,
            children = _props.children,
            labelCol = _props.labelCol,
            wrapperCol = _props.wrapperCol,
            style = _props.style,
            prefix = _props.prefix;


        var formClassName = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'form'] = true, _classNames[prefix + 'inline'] = inline, _classNames['' + prefix + size] = size, _classNames[className] = !!className, _classNames));

        return _react2.default.createElement(
            'form',
            (0, _extends3.default)({}, _nextUtil.obj.pickOthers(Form.propTypes, this.props), {
                className: formClassName,
                style: style,
                onSubmit: onSubmit }),
            _react2.default.Children.map(children, function (child) {
                if (child && typeof child.type === 'function' && child.type._typeMark === 'form_item') {
                    var childrenProps = {
                        labelCol: child.props.labelCol ? child.props.labelCol : labelCol,
                        wrapperCol: child.props.wrapperCol ? child.props.wrapperCol : wrapperCol,
                        labelAlign: child.props.labelAlign ? child.props.labelAlign : labelAlign,
                        labelTextAlign: child.props.labelTextAlign ? child.props.labelTextAlign : labelTextAlign,
                        size: child.props.size ? child.props.size : size
                    };
                    return _react2.default.cloneElement(child, pickerDefined(childrenProps));
                }
                return child;
            })
        );
    };

    return Form;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 内联表单
     */
    inline: _propTypes2.default.bool,
    /**
     * 单个Item的size自定义，优先级高于Form的size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。
     * @enumdesc 大, 中, 小
     */
    size: _propTypes2.default.oneOf(['large', 'medium', 'small']),
    /**
     * 标签的位置
     * @enumdesc 上, 左, 内
     */
    labelAlign: _propTypes2.default.oneOf(['top', 'left', 'inset']),
    /**
     * 标签的左右对齐方式
     * @enumdesc 左, 右
     */
    labelTextAlign: _propTypes2.default.oneOf(['left', 'right']),
    /**
     * 经 `new Field(this)` 初始化后，直接传给 Form 即可 用到表单校验则不可忽略此项
     */
    field: _propTypes2.default.any,
    /**
     * 控制第一级 Item 的 labelCol
     */
    labelCol: _propTypes2.default.object,
    /**
     * 控制第一级 Item 的 wrapperCol
     */
    wrapperCol: _propTypes2.default.object,
    /**
     * form内有 `htmlType="submit"` 的元素的时候会触发
     */
    onSubmit: _propTypes2.default.func,
    /**
     * 子元素
     */
    children: _propTypes2.default.any,
    /**
     * 扩展class
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * 表单数值
     */
    value: _propTypes2.default.object,
    /**
     * 表单变化回调
     */
    onChange: _propTypes2.default.func,
    fieldOptions: _propTypes2.default.object
}, _class.defaultProps = {
    prefix: 'next-',
    onSubmit: preventDefault,
    size: 'medium',
    labelAlign: 'left',
    onChange: _nextUtil.func.noop
}, _class.childContextTypes = {
    _formField: _propTypes2.default.object,
    _formSize: _propTypes2.default.string
}, _temp);
Form.displayName = 'Form';
exports.default = _nextConfigProvider2.default.config(Form);
module.exports = exports['default'];